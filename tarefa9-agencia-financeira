import 'dart:io';

class Conta {
  int numero;
  int agencia;
  double saldo;

  Conta(this.numero, this.agencia, this.saldo);
}

class ContaCorrente extends Conta {
  double mensalidade;

  ContaCorrente(int numero, int agencia, double saldo, this.mensalidade) : super(numero, agencia, saldo);

  void descontaMensalidade() {
    saldo -= mensalidade;
  }
}

class ContaPoupanca extends Conta {
  double rendimento;

  ContaPoupanca(int numero, int agencia, double saldo, this.rendimento) : super(numero, agencia, saldo);

  double calcularRendimento(int nMeses) {
   
    double saldoFinal = saldo + saldo * rendimento * nMeses;
    return saldoFinal;
  }
}
  


void main() {
  print('Bem-vindo à agência bancária!');
  print('Digite o número da sua conta:');
  int? numeroConta;
  while (numeroConta == null || numeroConta <= 0) {
    String? input = stdin.readLineSync();
    if (input == null || input.isEmpty) {
      print('Número de conta inválido. Insira um valor válido.');
    } else {
      numeroConta = int.tryParse(input);
      if (numeroConta == null || numeroConta <= 0) {
        print('Número de conta inválido. Insira um valor válido.');
      }
    }
  }

  print('Digite o número da agência:');
  int? numeroAgencia;
  while (numeroAgencia == null || numeroAgencia <= 0) {
    String? input = stdin.readLineSync();
    if (input == null || input.isEmpty) {
      print('Número de agência inválido. Insira um valor válido.');
    } else {
      numeroAgencia = int.tryParse(input);
      if (numeroAgencia == null || numeroAgencia <= 0) {
        print('Número de agência inválido. Insira um valor válido.');
      }
    }
  }
    double saldoInicial;
    while(true){
        print('Digite o saldo inicial:');
        saldoInicial = double.tryParse(stdin.readLineSync()!) ?? -1;
        if (saldoInicial >= 0) {
        break;
        } else {
        print('Saldo inicial inválido. Insira um número positivo como valor.');
        continue;
        }
    }


  ContaCorrente contaCorrente = ContaCorrente(numeroConta, numeroAgencia, saldoInicial, 10.0);
  ContaPoupanca contaPoupanca = ContaPoupanca(numeroConta, numeroAgencia, saldoInicial, 0.05);

  int opcao;
  do {
    print('Escolha uma opção:');
    print('1 - Consultar saldo da conta corrente');
    print('2 - Consultar saldo da conta poupança');
    print('3 - Descontar mensalidade da conta corrente');
    print('4 - Calcular rendimento da conta poupança');
    print('0 - Sair');
    opcao = int.parse(stdin.readLineSync()!);

    switch (opcao) {
      case 1:
        print('Saldo conta corrente: ${contaCorrente.saldo}');
        break;
      case 2:
        double? saldoPoupanca = contaPoupanca.calcularRendimento(0);
        print('Saldo conta poupança: $saldoPoupanca');
        break;
      case 3:
        contaCorrente.descontaMensalidade();
        print('Mensalidade descontada!');
        break;
      case 4:
        print('Digite a quantidade de meses:');
        int nMeses = int.tryParse(stdin.readLineSync()!) ?? -1;
        double? saldoPoupanca = contaPoupanca.calcularRendimento(nMeses);
        print('Saldo conta poupança após $nMeses meses: $saldoPoupanca');
        break;
      case 0:
        print('Obrigado por utilizar nossos serviços!');
        break;
      default:
        print('Opção inválida!');
        
    }
  } while (opcao != 0);
}
